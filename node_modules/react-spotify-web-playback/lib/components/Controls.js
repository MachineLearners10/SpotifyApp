"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var Next_1 = require("./icons/Next");
var Pause_1 = require("./icons/Pause");
var Play_1 = require("./icons/Play");
var Previous_1 = require("./icons/Previous");
var styles_1 = require("../styles");
var Wrapper = (0, styles_1.styled)('div')({}, function (_a) {
    var style = _a.style;
    return ({
        alignItems: 'center',
        display: 'flex',
        height: (0, styles_1.px)(style.h),
        justifyContent: 'center',
        '@media (max-width: 767px)': {
            padding: (0, styles_1.px)(10),
        },
        '> div': {
            minWidth: (0, styles_1.px)(style.h),
            textAlign: 'center',
        },
        button: {
            alignItems: 'center',
            color: style.c,
            display: 'inline-flex',
            fontSize: (0, styles_1.px)(16),
            height: (0, styles_1.px)(48),
            justifyContent: 'center',
            width: (0, styles_1.px)(48),
            '&.rswp__toggle': {
                fontSize: (0, styles_1.px)(28),
            },
        },
    });
}, 'ControlsRSWP');
function Controls(props) {
    var isExternalDevice = props.isExternalDevice, isPlaying = props.isPlaying, locale = props.locale, nextTracks = props.nextTracks, onClickNext = props.onClickNext, onClickPrevious = props.onClickPrevious, onClickTogglePlay = props.onClickTogglePlay, previousTracks = props.previousTracks, _a = props.styles, color = _a.color, height = _a.height;
    return (React.createElement(Wrapper, { style: { c: color, h: height } },
        React.createElement("div", null, (!!previousTracks.length || isExternalDevice) && (React.createElement("button", { "aria-label": locale.previous, onClick: onClickPrevious, title: locale.previous, type: "button" },
            React.createElement(Previous_1.default, null)))),
        React.createElement("div", null,
            React.createElement("button", { "aria-label": isPlaying ? locale.pause : locale.play, className: "rswp__toggle", onClick: onClickTogglePlay, title: isPlaying ? locale.pause : locale.play, type: "button" }, isPlaying ? React.createElement(Pause_1.default, null) : React.createElement(Play_1.default, null))),
        React.createElement("div", null, (!!nextTracks.length || isExternalDevice) && (React.createElement("button", { "aria-label": locale.next, onClick: onClickNext, title: locale.next, type: "button" },
            React.createElement(Next_1.default, null))))));
}
exports.default = Controls;
//# sourceMappingURL=Controls.js.map